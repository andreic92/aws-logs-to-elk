- hosts: localhost
  vars:
    lambda_app_dir: "{{ playbook_dir }}/../apps/aws-lambda-to-elk"
    lambda_app_binary: "forwarder"

    terraform_project_path: "{{ playbook_dir }}/../terraform"

    final_stack_state: "{{ stack_state | default('present') }}"
  tasks:
  - name: "Create needed directories"
    file:
      path: "{{ lambda_app_dir }}"
      state: directory
    when: final_stack_state == "present"

  - name: "Build the lambda application"
    docker_container:
      name: build_lambda_app
      image: "golang:1.12.1"
      working_dir: /
      auto_remove: True
      detach: False
      command: "/bin/bash -c \"git clone https://github.com/yottta/aws-lambda-to-elk && cd aws-lambda-to-elk && go build -o /var/host_dir/{{ lambda_app_binary }} && ls -lah .\""
      volumes:
        - "{{ lambda_app_dir }}:/var/host_dir"
    when: final_stack_state == "present"

  - archive:
      path: "{{ lambda_app_dir }}/{{ lambda_app_binary }}"
      dest: "{{ lambda_app_dir }}/app.zip"
      format: zip
    when: final_stack_state == "present"

  - command: "terraform init"
    args:
      chdir: "{{ terraform_project_path }}"
    register: terraform_init_output

  - debug:
      msg: "{{ terraform_init_output.stdout }}"

  - terraform:
      project_path: "{{ terraform_project_path }}"
      state: "{{ final_stack_state }}"
      variables:
        lambda_app_zip_file_path: "{{ lambda_app_dir }}/app.zip"
      variables_file: "{{ terraform_project_path }}/secret.tfvars"
    register: terraform_output

  - debug:
      msg: "{{ terraform_output.stdout }}"
